@inject PlayerService PlayerService
@implements IDisposable

<div class="col-12 col-md-6">
    <div class="card bg-secondary bg-opacity-10 border-0">
        <div class="card-body p-3">
            <div class="d-flex justify-content-between align-items-center">
                <h5 class="card-title text-light mb-0">
                    <i class="fas fa-skull text-warning me-2"></i> Enemy Progress
                </h5>
                @if (PlayerService.CurrentEnemy == 15)
                {
                    <span class="badge bg-danger px-3 py-2">
                        <i class="fas fa-crown"></i> BOSS
                    </span>
                }
                else
                {
                    <span class="badge bg-warning px-3 py-2">Enemy @PlayerService.CurrentEnemy</span>
                }
            </div>
            <div class="progress mt-3" style="height: 25px">
                <div class="progress-bar @GetProgressBarColor() progress-bar-striped progress-bar-animated"
                     role="progressbar"
                     style="width: @(100 * PlayerService.CurrentEnemy/15)%">
                    @if (PlayerService.CurrentEnemy < 15)
                    {
                        <span class="progress-text">Enemy @PlayerService.CurrentEnemy / 15</span>
                    }
                    @if (PlayerService.CurrentEnemy == 15)
                    {
                        <span class="progress-text">ðŸ”¥ BOSS BATTLE! ðŸ”¥</span>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .progress {
        background-color: rgba(0, 0, 0, 0.2);
        box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.2);
    }

    .progress-text {
        color: white;
        font-weight: bold;
        font-size: 1rem;
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);
        mix-blend-mode: difference;
    }
</style>

@code {
    private string GetProgressBarColor()
    {
        if (PlayerService.CurrentEnemy == 15)
            return "bg-danger";
        return "bg-warning";
    }

    protected override void OnInitialized()
    {
        PlayerService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        PlayerService.OnChange -= StateHasChanged;
    }
}
